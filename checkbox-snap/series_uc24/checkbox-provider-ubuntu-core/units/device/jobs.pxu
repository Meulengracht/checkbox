id: ubuntucore/remodels
_summary: Create a list of remodel tests
_description:
    Remodeling is supported for the below versions, and variants of the remodeling
    test must be created for each
category_id: ubuntucore
plugin: resource
command:
  echo source: 22
  echo destination: 24
  echo
  echo source: 20
  echo destination: 22

id: ubuntucore/remodel-{source}-to-{destination}
category_id: ubuntucore
_summary: Remodel Ubuntu Core {source} to {destination}
_purpose:
 Verify the system can remodel from ubuntu core {source} to {destination} under normal
 circumstances. The requirement is that the official models from canonical
 are used for the running Ubuntu Core host. Multiple reboots will happen
 as a part of this test.
unit: template
_template-summary: Ubuntu Core remodel test template
template-id: ubuntucore/remodel
template-resource: ubuntucore/remodels
imports: from com.canonical.certification import os
requires: os.distributor_id == 'Ubuntu Core'
template-unit: job
plugin: shell
user: root
estimated_duration: 60.0
command:
  set -e
  snap model
  snap model | grep "ubuntu-core-{source}"
  remodel_test.py {destination}

id: ubuntucore/remodel-reboot-{source}-first
category_id: ubuntucore
_summary: First remodel checkpoint to reboot system during remodel.
_purpose:
 A system reboot will be requested as a part of requesting a remodel, this serves
 to be a checkpoint for that, and triggers the system to reboot.
unit: template
_template-summary: Remodeling boot checkpoint template
template-id: ubuntucore/remodel-reboot-first
template-resource: ubuntucore/remodels
imports: from com.canonical.certification import os
requires: os.distributor_id == 'Ubuntu Core'
template-unit: job
plugin: shell
user: root
flags: noreturn
estimated_duration: 0.1
command:
  reboot

id: ubuntucore/remodel-reboot-{source}-second
category_id: ubuntucore
_summary: Second remodel checkpoint to reboot system during remodel.
_purpose:
 At this point, the remodel will start, the first reboot was to create a 
 recovery system and the next will be to start the remodel itself. 
 This will take a while and do several reboots but not be observed by
 checkbox 
unit: template
template-id: ubuntucore/remodel-reboot-second
template-resource: ubuntucore/remodels
_template-summary: Remodeling second boot checkpoint template
imports: from com.canonical.certification import os
requires: os.distributor_id == 'Ubuntu Core'
template-unit: job
plugin: shell
user: root
flags: noreturn
estimated_duration: 300.0
command:
  set -e
  snap changes || true
  snap change 55 || true
  # remodeling from 22-24 switches how ssh works, reenable it
  # as this is not done automatically
  max_attempts=300
  attempt_num=1
  success=false
  while [ $success = false ] && [ $attempt_num -le $max_attempts ]; do
    journalctl -b -u snapd | grep "Waiting for system reboot"
    if [ $? -eq 0 ]; then
      success=true
    else
      echo "Attemp $attempt_num: waiting for reboot request"
      attempt_num=$(( attempt_num + 1 ))
      sleep 0.5
    fi
  done
  reboot

id: ubuntucore/remodel-{source}-to-{destination}-verify
category_id: ubuntucore
_summary: Verify remodel of Ubuntu Core {source} to {destination}
unit: template
template-id: ubuntucore/remodel-verify
_template-summary: Remodeling verification step template
template-resource: ubuntucore/remodels
imports: from com.canonical.certification import os
requires: os.distributor_id == 'Ubuntu Core'
template-unit: job
plugin: shell
user: root
estimated_duration: 150.0
command:
  set -e
  snap changes || true
  max_attempts=30
  attempt_num=1
  success=false
  while [ $success = false ] && [ $attempt_num -le $max_attempts ]; do
    snap changes | grep "Doing"
    if [ $? -ne 0 ]; then
      success=true
    else
      echo "Attemp $attempt_num: waiting for remodel to finish"
      attempt_num=$(( attempt_num + 1 ))
      sleep 5
    fi
  done
  snap model
  snap changes
  snap change 57
  snap model | grep "ubuntu-core-{destination}"
