job_queue: $INPUT_QUEUE
global_timeout: 3600
output_timeout: 1800
$INPUT_PROVISION_DATA
test_data:
  attachments:
    - local: "tools/lab_dispatch/resources/manifest.conf"
      agent: "manifest.conf"
    - local: "tools/lab_dispatch/resources/checkbox.no-manifest.partial.conf"
      agent: "checkbox.no-manifest.partial.conf"
    - local: "tools/lab_dispatch/launcher_override.conf"
      agent: "launcher_override.conf"
  test_cmds: |
    #!/usr/bin/env bash

    set -x
    set -e

    # input arguments
    RISK=$INPUT_CHECKBOX_RISK
    RUNTIME_NAME=$INPUT_CHECKBOX_RUNTIME_NAME
    FRONTEND_NAME=$INPUT_CHECKBOX_FRONTEND_NAME
    FRONTEND_TRACK=$INPUT_CHECKBOX_FRONTEND_TRACK

    export TOOLS_PATH=tools

    # retrieve all scripts/tools necessary from a repo
    curl -Ls -o install_tools.sh https://raw.githubusercontent.com/canonical/hwcert-jenkins-tools/install_checkbox_scriplet/install_tools.sh
    source install_tools.sh $TOOLS_PATH --branch install_checkbox_scriplet

    # ensure device is available before continuing
    wait_for_ssh --allow-degraded

    _run install_packages git python3 python3-pip dpkg-dev
    refresh_zapper_if_needed --channel "$INPUT_ZAPPER_CHANNEL"

    wait_for_ssh --allow-degraded

    install_checkbox_snaps $RISK $RUNTIME_NAME $FRONTEND_NAME $FRONTEND_TRACK

    # retrieve manifest
    RESOURCES_PATH=attachments/test/resources
    MANIFEST_FILE=manifest.conf
    set +e
    fetch_manifest --manifest_file manifest.conf $CID $HEXR_DEVICE_SECURE_ID
    if [ $? -ne 0 ]; then
        echo "Using default manifest"
        MANIFEST_FILE=$RESOURCES_PATH/manifest.conf
    fi
    set -e

    ### create checkbox launcher
    # first dump the location specific infos in the launcher
    which envsubst || install_packages gettext
    envsubst < $RESOURCES_PATH/checkbox.no-manifest.partial.conf > checkbox.no-manifest.conf
    # then insert the manifest entries via the stacker
    stacker --output checkbox.conf checkbox.no-manifest.conf $MANIFEST_FILE $RESOURCES_PATH/launcher_override.conf

    PYTHONUNBUFFERED=1 checkbox-cli control $DEVICE_IP checkbox.conf
    EXITCODE=$?

    # placeholder for gathering possible artifacts

    exit $EXITCODE
